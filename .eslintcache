[{"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\index.js":"1","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\Navbar.js":"2","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Register.js":"3","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\TakeQuiz.js":"4","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Dashboard.js":"5","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Login.js":"6","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Analytics.js":"7","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\QuizList.js":"8","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\QuizCard.js":"9","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\services\\QuizService.js":"10","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\App.js":"11","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\Plan.js":"12","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\auth.js":"13","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Home.js":"14"},{"size":586,"mtime":1608997065729,"results":"15","hashOfConfig":"16"},{"size":1404,"mtime":1610406410135,"results":"17","hashOfConfig":"16"},{"size":2631,"mtime":1609017334580,"results":"18","hashOfConfig":"16"},{"size":7502,"mtime":1610421027441,"results":"19","hashOfConfig":"16"},{"size":1172,"mtime":1610158820029,"results":"20","hashOfConfig":"16"},{"size":2505,"mtime":1609017334580,"results":"21","hashOfConfig":"16"},{"size":4747,"mtime":1610158843228,"results":"22","hashOfConfig":"16"},{"size":2978,"mtime":1610667796340,"results":"23","hashOfConfig":"16"},{"size":1318,"mtime":1610561162579,"results":"24","hashOfConfig":"16"},{"size":857,"mtime":1610162061402,"results":"25","hashOfConfig":"16"},{"size":1611,"mtime":1609990762535,"results":"26","hashOfConfig":"16"},{"size":4753,"mtime":1610421340303,"results":"27","hashOfConfig":"16"},{"size":168,"mtime":1608997065725,"results":"28","hashOfConfig":"16"},{"size":3106,"mtime":1610578718785,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"683jfc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\index.js",[],["62","63"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\Navbar.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Register.js",["64"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\TakeQuiz.js",["65","66","67","68","69","70","71"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Dashboard.js",["72","73","74"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Login.js",["75","76"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Analytics.js",["77","78"],"import React, { Component } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Progress,\r\n  Button\r\n} from 'reactstrap';\r\nimport { Doughnut, Line } from 'react-chartjs-2';\r\n\r\nexport default class AnalyticsPage extends Component {\r\n\r\n\r\n  render() {\r\n    const chartColors = {\r\n      red: 'rgb(233, 30, 99)',\r\n      danger: 'rgb(233, 30, 99)',\r\n      dangerTransparent: 'rgba(233, 30, 99, .8)',\r\n      orange: 'rgb(255, 159, 64)',\r\n      yellow: 'rgb(255, 180, 0)',\r\n      green: 'rgb(34, 182, 110)',\r\n      blue: 'rgb(68, 159, 238)',\r\n      primary: 'rgb(68, 159, 238)',\r\n      primaryTransparent: 'rgba(68, 159, 238, .8)',\r\n      purple: 'rgb(153, 102, 255)',\r\n      grey: 'rgb(201, 203, 207)',\r\n\r\n      primaryShade1: 'rgb(68, 159, 238)',\r\n      primaryShade2: 'rgb(23, 139, 234)',\r\n      primaryShade3: 'rgb(14, 117, 202)',\r\n      primaryShade4: 'rgb(9, 85, 148)',\r\n      primaryShade5: 'rgb(12, 70, 117)'\r\n    };\r\n    const donutData = {\r\n      labels: ['Q1', 'Q2', 'Q3'],\r\n      datasets: [\r\n        {\r\n          data: [300, 50, 100],\r\n          backgroundColor: [\r\n            chartColors.primaryShade1,\r\n            chartColors.primaryShade2,\r\n            chartColors.primaryShade3\r\n          ],\r\n          hoverBackgroundColor: [\r\n            chartColors.primaryShade4,\r\n            chartColors.primaryShade4,\r\n            chartColors.primaryShade4\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n    const line = {\r\n      data: {\r\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n        datasets: [\r\n          {\r\n            label: '# of Votes',\r\n            data: [3, 6, 4, 10, 8, 12],\r\n            borderColor: 'transparent',\r\n            backgroundColor: chartColors.primary,\r\n            pointBackgroundColor: 'rgba(0,0,0,0)',\r\n            pointBorderColor: 'rgba(0,0,0,0)',\r\n            borderWidth: 4\r\n          }\r\n        ]\r\n      }\r\n    };\r\n    return (\r\n      <div style={{marginTop:'10px'}}>\r\n\r\n        \r\n\r\n        <Row>\r\n          <Col md={8} sm={12}>\r\n            <Card>\r\n              <CardHeader>Answer Efficiency</CardHeader>\r\n              <CardBody>\r\n                <div>\r\n                  <Line\r\n                    data={line.data}\r\n                    width={2068}\r\n                    height={846}\r\n                    legend={{ display: false }}\r\n                  />\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col md={4} sm={12}>\r\n            <Card>\r\n              <CardHeader>Mastery</CardHeader>\r\n              <CardBody>\r\n                <Doughnut\r\n                  data={donutData}\r\n                  width={908}\r\n                  height={768}\r\n                  legend={{ display: false }}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* <Row>\r\n          <Col md={8} sm={12}>\r\n            <Card>\r\n              <CardHeader>Conversions</CardHeader>\r\n              <CardBody>\r\n                <Row className=\"m-b-md\">\r\n                  <Col xs={4}>\r\n                    <h5>Added to Cart</h5>\r\n                    <div className=\"h2\">4.30%</div>\r\n                    <small className=\"text-muted\">23 Visitors</small>\r\n                  </Col>\r\n                  <Col xs={4}>\r\n                    <h5>Reached Checkout</h5>\r\n                    <div className=\"h2\">2.93</div>\r\n                    <small className=\"text-muted\">12 Visitors</small>\r\n                  </Col>\r\n                  <Col xs={4}>\r\n                    <h5>Purchased</h5>\r\n                    <div className=\"h2\">10</div>\r\n                    <small className=\"text-muted\">10 Customers</small>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col md={4} xs={12}>\r\n            <Card>\r\n              <CardHeader>Integrations</CardHeader>\r\n              <CardBody>\r\n                <Switch\r\n                  enabled={this.state.facebook}\r\n                  toggle={() => {\r\n                    this.setState(prevState => ({ facebook: !prevState.facebook }));\r\n                  }}\r\n                />\r\n                <span style={{marginLeft:'10px'}}>\r\n                  Facebook\r\n                </span>\r\n                <hr />\r\n                <Switch\r\n                  enabled={this.state.twitter}\r\n                  toggle={() => {\r\n                    this.setState(prevState => ({ twitter: !prevState.twitter }));\r\n                  }}\r\n                />\r\n                <span style={{marginLeft:'10px'}}>\r\n                   Twitter\r\n                </span>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n",["79","80"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\QuizList.js",["81","82","83"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\QuizCard.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\services\\QuizService.js",["84"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\App.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\Plan.js",["85"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport QuizService from '../services/QuizService'\r\nconst quizService = new QuizService()\r\nexport default function Plan() {\r\n    const [plan, setPlan] = useState(false)\r\n    const [testDate, setTestDate] = useState(null)\r\n    const [category, setCategory] = useState(\"Advertising\")\r\n    const [goals, setGoals] = useState(null)\r\n    useEffect(() => {\r\n        getGoals()\r\n    }, [])\r\n    function getGoals() {\r\n        quizService.getPlan().then(result => {\r\n            setGoals(result.data)\r\n        })\r\n    }\r\n    function createPlan() {\r\n        if (testDate) {\r\n            quizService.createPlan({ \"testDate\": testDate, \"category\": category }).then(result => {\r\n                setGoals(result.data)\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Please select your test date...\")\r\n        }\r\n    }\r\n    const datesAreOnSameDay = (first, second) =>\r\n    {\r\n        return first.getFullYear() === second.getFullYear() &&\r\n        first.getMonth() === second.getMonth() &&\r\n        first.getDate() === second.getDate();\r\n    }\r\n    function dateWithinDateRange(date, min, max){\r\n        return date>new Date(min) && date< new Date(max)\r\n    }\r\n    \r\n    return (\r\n        //do analyutics\r\n        //follow guidelines\r\n        //dropdown, true or false, multiple choice, multiple answers, fill in the blank\r\n        //401 error\r\n        //analytics dashboard and take quizzes apge\r\n        //add code to extension\r\n        <div className=\"goal-header\"  >\r\n            {!goals?\r\n            <div style={{color:'white'}}>Loading...</div>\r\n            :\r\n            goals.length > 0 ?\r\n                <div style={{ color: 'white', display: 'flex', flexDirection: 'column' }}>\r\n                    <h2 style={{ textDecorationLine: 'underline',marginBottom:'10px' }}>Reach Nationals</h2>\r\n                    {goals.map((goal, index) => (\r\n                        <div key={goal.id}>\r\n                            \r\n                        <div className=\"step\">\r\n                            <h1 className={new Date()>new Date(goal.date)?\"filled-step-header\":\"step-header\"}>{index + 1}</h1>\r\n                            <p className=\"step-text\">{goal.date} : <a href={`/quizzes/${goal.quiz.id}`}><strong>{goal.quiz.name}</strong></a> {datesAreOnSameDay(new Date(),new Date(goal.date))&&<> &#x2190; You are here</>}</p>\r\n\r\n                        </div>\r\n                        <div className=\"step border-left\">\r\n                            <p className=\"step-text\">{goal.date} to {goals[index+1]?goals[index+1].date:\"Test Date\"} : <strong>Study</strong>{dateWithinDateRange(new Date(),goal.date,goals[index+1]?goals[index+1].date:\"2099-10-12\")&&<> &#x2190; You are here</>}</p>\r\n\r\n                        </div>\r\n                        </div>\r\n                        \r\n                    ))}\r\n                    <div className=\"step\">\r\n                            <h1 className=\"step-header\">{goals.length+1}</h1>\r\n                            <p className=\"step-text\">Ready for your <b>Objective Test</b></p>\r\n\r\n                        </div>\r\n                    </div> :\r\n\r\n                !plan ?\r\n                    <>\r\n                        <img className=\"goal-image\" src=\"https://cdn.kastatic.org/images/sat/overview-ctas/schedule.svg\" alt=\"\" aria-hidden=\"true\" />\r\n                        <div style={{ color: 'white', padding: '15px' }}>\r\n                            <h2 style={{ marginBottom: '10px' }}>Set up new goals today!</h2>\r\n    Based on your test date, we'll put together a practice plan to ensure you're ready.<br></br>\r\n                            <button style={{ color: '#1586CA', backgroundColor: 'white', padding: '10px', borderRadius: '10px', marginTop: '10px' }} onClick={() => setPlan(true)}>Plan Your Studying</button></div>\r\n                    </> : <div style={{ color: 'white', display: 'flex', flexDirection: 'column' }}><strong style={{ margin: '10px' }}>Enter testing date...</strong><input type=\"date\" onChange={e => setTestDate(e.target.value)} /><strong style={{ margin: '10px' }}>Testing Category</strong><select value={category} onChange={e => setCategory(e.target.value)}>\r\n                        <option value=\"Journalism\">Journalism</option>\r\n                        <option value=\"Securities and Investments\">Securities and Investments</option>\r\n                        <option value=\"Advertising\">Advertising</option>\r\n                    </select>\r\n                        <button style={{ color: '#1586CA', backgroundColor: 'white', padding: '10px', borderRadius: '10px', marginTop: '10px' }} onClick={createPlan}>Create My Study Plan</button>\r\n\r\n\r\n                    </div>}\r\n\r\n\r\n        </div>)\r\n\r\n}","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\auth.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Home.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":12,"column":13,"nodeType":"92","messageId":"93","endLine":12,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":27,"column":6,"nodeType":"96","endLine":27,"endColumn":8,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":72,"column":15,"nodeType":"100","messageId":"101","endLine":72,"endColumn":17},{"ruleId":"98","severity":1,"message":"102","line":103,"column":15,"nodeType":"100","messageId":"101","endLine":103,"endColumn":17},{"ruleId":"98","severity":1,"message":"102","line":111,"column":13,"nodeType":"100","messageId":"101","endLine":111,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":162,"column":38,"nodeType":"100","messageId":"101","endLine":162,"endColumn":40},{"ruleId":"94","severity":1,"message":"103","line":198,"column":6,"nodeType":"96","endLine":198,"endColumn":22,"suggestions":"104"},{"ruleId":"98","severity":1,"message":"99","line":217,"column":36,"nodeType":"100","messageId":"101","endLine":217,"endColumn":38},{"ruleId":"90","severity":1,"message":"105","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"106","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"90","severity":1,"message":"107","line":2,"column":26,"nodeType":"92","messageId":"93","endLine":2,"endColumn":36},{"ruleId":"90","severity":1,"message":"91","line":11,"column":9,"nodeType":"92","messageId":"93","endLine":11,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":54,"column":13,"nodeType":"110","endLine":54,"endColumn":42},{"ruleId":"90","severity":1,"message":"111","line":8,"column":3,"nodeType":"92","messageId":"93","endLine":8,"endColumn":11},{"ruleId":"90","severity":1,"message":"112","line":9,"column":3,"nodeType":"92","messageId":"93","endLine":9,"endColumn":9},{"ruleId":"86","replacedBy":"113"},{"ruleId":"88","replacedBy":"114"},{"ruleId":"90","severity":1,"message":"115","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"94","severity":1,"message":"116","line":15,"column":15,"nodeType":"117","endLine":19,"endColumn":6},{"ruleId":"108","severity":1,"message":"118","line":43,"column":13,"nodeType":"110","endLine":43,"endColumn":67},{"ruleId":"119","severity":1,"message":"120","line":8,"column":5,"nodeType":"121","messageId":"122","endLine":8,"endColumn":20},{"ruleId":"90","severity":1,"message":"115","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["125"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'answer.id'. Either include it or remove the dependency array.",["126"],"'Card' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Progress' is defined but never used.","'Button' is defined but never used.",["123"],["124"],"'axios' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [id]",{"range":"131","text":"132"},"Update the dependencies array to be: [answer.id, selectedAnswer]",{"range":"133","text":"134"},[1043,1045],"[id]",[6070,6086],"[answer.id, selectedAnswer]"]